---
name: Docker

on:
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  CADDY_VERSION: 2.8.4
  COSIGN_RELEASE: v2.4.1
  DIGESTS_PATH: ${{ github.workspace }}/digest

jobs:
  build:
    name: Build and push Docker image for ${{ matrix.targetplatform }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}

    strategy:
      fail-fast: false
      matrix:
        targetplatform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            ${{ env.IMAGE_NAME}}
          tags: |
            type=ref,event=pr
            type=sha,format=short
          flavor: |
            latest=false
            suffix=-${{ matrix.targetplatform }}
            prefix=

      - name: Prepare env variables
        run: |
          echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> "$GITHUB_ENV"
          echo "ARTIFACT_NAME=digests-$(echo ${{ matrix.targetplatform }} | tr / -)" >> "$GITHUB_ENV"

      - name: Validate build configuration
        uses: docker/build-push-action@v6
        with:
          call: check
          context: .
          file: Containerfile
          platforms: ${{ matrix.targetplatform }}
          build-args: |
            CADDY_VERSION=${{ env.CADDY_VERSION }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Containerfile
          platforms: ${{ matrix.targetplatform }}
          build-args: |
            CADDY_VERSION=${{ env.CADDY_VERSION }}
          # push: ${{ github.event_name != 'pull_request' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          provenance: mode=max
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        # if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da #v3.7.0
        with:
          cosign-release: ${{ env.COSIGN_RELEASE }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        # if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes "{}@${DIGEST}"

      - name: Export digest
        run: |
          mkdir -p "$DIGESTS_PATH"
          digest="${{ steps.build-and-push.outputs.digest }}"
          touch "$DIGESTS_PATH/${digest#sha256:}"
          ls -l "$DIGESTS_PATH"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.DIGESTS_PATH }}/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-24.04
    needs: build
    # if: ${{ github.event_name != 'pull_request' }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.DIGESTS_PATH }}
          pattern: digests-*
          merge-multiple: true

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup docker buildx for multi-platform builds
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=sha,format=short
            type=edge,branch=main
            type=semver,pattern={{version}}

      - name: Prepare env variables
        working-directory: ${{ env.DIGESTS_PATH }}
        run: |
          {
            echo "TAGS=$(jq -cr '.tags | join(",")' <<< "$DOCKER_METADATA_OUTPUT_JSON")"
            echo "SOURCES=$(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)"
            echo "ANNOTATIONS=$(jq -cr '.annotations | map(sub("^manifest:*"; "")) | map("--annotation \"\(.)\"") | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON")"
          } >> "$GITHUB_ENV"
      # Annotations are not used yet
      # See https://github.com/docker/buildx/issues/2148

      - name: Create manifest list and push
        working-directory: ${{ env.DIGESTS_PATH }}
        run: |
          docker buildx imagetools create -t ${{ env.TAGS }} ${{ env.SOURCES }}

      - name: inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} --raw
